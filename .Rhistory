rm(list=ls())
labels <- read.table("activity_labels.txt", header = FALSE, sep ="")
setwd("~/Devel/R/DataScience/GettingData/Project/GettingDataProject")  # need to change this eventually
labels <- read.table("activity_labels.txt", header = FALSE, sep ="")
labels
labels[,1]
labels[,2]
rm(list=ls())
library(data.table)
X_test <- read.table("X_test.txt", header = FALSE, sep ="")
y_test <- read.table("y_test.txt", header = FALSE, sep ="")
subject_test <- read.table("subject_test.txt", header = FALSE, sep ="")
X_train <- read.table("X_train.txt", header = FALSE, sep ="")
y_train <- read.table("y_train.txt", header = FALSE, sep ="")
subject_train <- read.table("subject_train.txt", header = FALSE, sep ="")
#
labels <- read.table("activity_labels.txt", header = FALSE, sep ="")
library(dplyr)
head y_test
head(y_test)
tail(y_test)
test <- left_join(labels, y_test)
head(test)
tail(test)
test_labels <- test[,V2]
test_labels <- test[,2]
head(test_labels)
rm(test)
test <- X_test[,1:6]
head(test)
test <- cbind(test_labels, test)
head(test)
tail(test)
test<- cbind(subject_test, test)
head(test)
tail(test)
features <- read.table("features.txt", header = FALSE, sep ="")
head(features)
?make_names
?make.names
make.names(features)
head(features)
make.names(features[,2])
names <- make.names(features[,2])
head(names)
names[1:3]
features[1:3,]
?colnames
colnames(X_test)
colnames(X_test) <- names
colnames(X_test)
X_all <- rbind(X_test, X_train)
colnames(X_train) <- names
X_all <- rbind(X_test, X_train)
X_all[1:3,1:6]
rm(list=ls())
library(data.table)
library(dplyr)
X_test <- read.table("X_test.txt", header = FALSE, sep ="")
y_test <- read.table("y_test.txt", header = FALSE, sep ="")
subject_test <- read.table("subject_test.txt", header = FALSE, sep ="")
X_train <- read.table("X_train.txt", header = FALSE, sep ="")
y_train <- read.table("y_train.txt", header = FALSE, sep ="")
subject_train <- read.table("subject_train.txt", header = FALSE, sep ="")
X_all <- rbind(X_test, X_train)
rm(X_test)
rm(X_train)
features <- read.table("features.txt", header = FALSE, sep ="")
feature_names <- make.names(features)
colnames(X_all) <- feature_names
X_all[1:3,1>4]
X_all[1:3,1:4]
rm(list=ls())
library(data.table)
library(dplyr)
X_test <- read.table("X_test.txt", header = FALSE, sep ="")
y_test <- read.table("y_test.txt", header = FALSE, sep ="")
subject_test <- read.table("subject_test.txt", header = FALSE, sep ="")
X_train <- read.table("X_train.txt", header = FALSE, sep ="")
y_train <- read.table("y_train.txt", header = FALSE, sep ="")
subject_train <- read.table("subject_train.txt", header = FALSE, sep ="")
#
# merge test and training sets
X_all <- rbind(X_test, X_train)
rm(X_test)
rm(X_train)
# rename columns of X_all with meaningful names
features <- read.table("features.txt", header = FALSE, sep ="")
feature_names <- make.names(features[,2])
colnames(X_all) <- feature_names
X_all[1:3,1:4]
y_all <- rbind(y_test, y_train)
rm(y_test)
rm(y_train)
subject_all <- rbind(subject_test, subject_train)
rm(subject_test)
rm(subject_train)
labels <- read.table("activity_labels.txt", header = FALSE, sep ="")
# something like this
#test_labels <- left_join(labels, y_test)
#train_labels <- left_join(labels, y_train)
labels_all <- left_join(labels, y_all)
X_all[1:3,1:6]
X_all <- cbind(labels_all, X_all)
X_all <- cbind(subject_all, X_all)
X_all[1:3,1:6]
colname(X_all[1]) <- "subjectID"
colnames(X_all[1]) <- "subjectID"
X_all[1:3,1:6]
colnames(X_all)[1] <- "subjectID"
X_all[1:3,1:6]
rm(list=ls())
library(data.table)
library(dplyr)
X_test <- read.table("X_test.txt", header = FALSE, sep ="")
y_test <- read.table("y_test.txt", header = FALSE, sep ="")
subject_test <- read.table("subject_test.txt", header = FALSE, sep ="")
X_train <- read.table("X_train.txt", header = FALSE, sep ="")
y_train <- read.table("y_train.txt", header = FALSE, sep ="")
subject_train <- read.table("subject_train.txt", header = FALSE, sep ="")
#
# merge test and training sets
X_all <- rbind(X_test, X_train)
rm(X_test)
rm(X_train)
# rename columns of X_all with meaningful names
features <- read.table("features.txt", header = FALSE, sep ="")
feature_names <- make.names(features[,2])
colnames(X_all) <- feature_names
#
y_all <- rbind(y_test, y_train)
rm(y_test)
rm(y_train)
subject_all <- rbind(subject_test, subject_train)
rm(subject_test)
rm(subject_train)
#
labels <- read.table("activity_labels.txt", header = FALSE, sep ="")
# something like this
#test_labels <- left_join(labels, y_test)
#train_labels <- left_join(labels, y_train)
labels_all <- left_join(labels, y_all)
# and something like this
labels_all[1:3,]
X_all <- cbind(labels_all[2], X_all)
X_all[1:3,1:6]
X_all <- cbind(subject_all, X_all)
colnames(X_all)[1] <- "subjectID"
colnames(X_all)[2] <- "activity"
X_all[1:3,1:6]
xtest <- select(X_all, (contains("mean.") | contains("sigma."))
)
xtest <- select(X_all, (contains("mean.")))
xtest <- select(X_all, contains("mean."))
xtest <- X_all[,grepl(("mean."|"std."), colnames(X_all))]
xtest <- X_all[,grepl("mean.", colnames(X_all))]
xtest2 <- X_all[,grepl("std.", colnames(X_all))]
xtest <- X_all[,grepl("mean..", colnames(X_all))]
xtest[1:3,1:6]
xtest[1:3,7:12]
colnames(xtest)
rm(xtest)
rm(xtest2)
?select
xtest <- select(X_all, matches("mean."|"std."))
xtest <- select(X_all, matches("mean."))
names < filter(feature_names, contains("mean.."))
names <- filter(feature_names, contains("mean.."))
feature_names[,grepl(("mean.."|"std.."))]
mean_names <- feature_names[,grepl("mean..")]
mean_names <- feature_names[,grepl("mean..", colnames())]
mean_names <- feature_names[,grepl("mean..", colnames(feature_names))]
mean_names <- feature_names[,grepl("mean..", feature_names]
mean_names <- feature_names[,grepl("mean..", feature_names)]
mean_names <- grepl("mean..", feature_names)
mean_names <- grepl(("mean.."|"std.."), feature_names)
mean_names <- feature_names[,grepl("mean\.", feature_names)]
mean_names <- feature_names[,grepl([mean\.|std.], feature_names)]
mean_names <- feature_names[,grepl([^mean\.], feature_names)]
grep([^mean\.], feature_names)
grep(^mean\., feature_names)
grep(mean\., feature_names)
grep(mean, feature_names)
grep("mean", feature_names)
grep("mean\.", feature_names)
grep("mean\\.", feature_names)
grep("std\\.", feature_names)
grep("(mean|std)\\.", feature_names)
xtest <- X_all[,grepl("(mean|std)\\.", colnames(X_all)]
xtest <- X_all[,grepl("(mean|std)\\.", colnames(X_all))]
xtest[1:3, 1:6]
xtest[1:3, 58:66]
colnames(xtest)
X_all <- X_all[,grepl("((mean|std)\\.|subjectID|activity)", colnames(X_all))]
colnames(X_all)
X_all[1:3,1:6]
X_all[6521:6523,1:6]
rm(xtest)
?group_by
xtest <- group_by(X_all, subjectID, activity)
xtest[1:12,1:4]
xtest[101:112,1:4]
xtest[1101:1112,1:4]
xtest[1501:1512,1:4]
xtest[201:212,1:4]
xtest[1:12,1:4]
xtest[501:512,1:4]
xtest[5001:5012,1:4]
xtest[1:100,1:4]
xtest[101:200,1:4]
xtest[201:300,1:4]
xtest[301:400,1:4]
arrange(X_all, subjectID, activity)
arr <- arrange(X_all, subjectID, activity)
arr[1:12, 1:6]
labels
arr[1:100, 1:6]
arr[101:200, 1:6]
arr[201:300, 1:6]
arr[301:400, 1:6]
arr[401:500, 1:6]
arr[501:600, 1:6]
arr[601:700, 1:6]
arr[2601:2700, 1:6]
means <- summarise(arr, mean())
means <- summarise(arr, mean(colnames(arr)))
colnames(arr)
means <- summarise(arr, mean(3:68))
means
?aggregate
by_activity <- aggregate(arr, by = activity, mean)
by_activity <- aggregate(arr, by = arr$activity, mean)
by_activity <- aggregate(arr, mean)
by_activity <- aggregate(arr, FUN="mean")
by_activity <- aggregate(arr,by=list(arr$activity), FUN="mean")
?summarise
?summarize
test <- summarise(arr, meantBodyAcc.mean...X())
test <- summarise(arr, mean(tBodyAcc.mean...X))
test
by_activity <- aggregate(arr[,3:68],by=list(arr$activity), FUN="mean")
by_subject <- aggregate(arr[,3:68],by=list(arr$subjectID), FUN="mean")
by_activity
?summarise_each
means <- X_all %>% group_by(activity, subjectID)
means %>% summarize_each(funs(mean))
means %>% summarise_each(funs(mean))
means <- X_all %>% group_by(subjectID, activity)
(means %>% summarise_each(funs(mean)))
result <- (means %>% summarise_each(funs(mean)))
?gather
??gather
library(tidyr)
?gather
gathered <- gather(X_all, subjectID:activity)
gathered <- gather(X_all, subjectID, activity)
head(gathered)
rm(gathered)
head(result)
??tidyr
avg <- aggregate(X_all[,3:68], list(X_all$subjectID, X_all$activity), mean)
avg[,1:6]
arrange(avg, subjectID, activity)
?arrange
arrange(avg, Group.1, Group.2)
avg <- arrange(avg, Group.1, Group.2)
avg[,1:6]
result[,1:6]
?write.table
q()
